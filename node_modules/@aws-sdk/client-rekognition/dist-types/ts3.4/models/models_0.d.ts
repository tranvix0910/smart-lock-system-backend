import {
  AutomaticJsonStringConversion as __AutomaticJsonStringConversion,
  ExceptionOptionType as __ExceptionOptionType,
} from "@smithy/smithy-client";
import { RekognitionServiceException as __BaseException } from "./RekognitionServiceException";
export declare class AccessDeniedException extends __BaseException {
  readonly name: "AccessDeniedException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<AccessDeniedException, __BaseException>
  );
}
export interface AgeRange {
  Low?: number | undefined;
  High?: number | undefined;
}
export interface S3Object {
  Bucket?: string | undefined;
  Name?: string | undefined;
  Version?: string | undefined;
}
export interface GroundTruthManifest {
  S3Object?: S3Object | undefined;
}
export interface Asset {
  GroundTruthManifest?: GroundTruthManifest | undefined;
}
export interface AssociatedFace {
  FaceId?: string | undefined;
}
export interface AssociateFacesRequest {
  CollectionId: string | undefined;
  UserId: string | undefined;
  FaceIds: string[] | undefined;
  UserMatchThreshold?: number | undefined;
  ClientRequestToken?: string | undefined;
}
export declare const UnsuccessfulFaceAssociationReason: {
  readonly ASSOCIATED_TO_A_DIFFERENT_USER: "ASSOCIATED_TO_A_DIFFERENT_USER";
  readonly FACE_NOT_FOUND: "FACE_NOT_FOUND";
  readonly LOW_MATCH_CONFIDENCE: "LOW_MATCH_CONFIDENCE";
};
export type UnsuccessfulFaceAssociationReason =
  (typeof UnsuccessfulFaceAssociationReason)[keyof typeof UnsuccessfulFaceAssociationReason];
export interface UnsuccessfulFaceAssociation {
  FaceId?: string | undefined;
  UserId?: string | undefined;
  Confidence?: number | undefined;
  Reasons?: UnsuccessfulFaceAssociationReason[] | undefined;
}
export declare const UserStatus: {
  readonly ACTIVE: "ACTIVE";
  readonly CREATED: "CREATED";
  readonly CREATING: "CREATING";
  readonly UPDATING: "UPDATING";
};
export type UserStatus = (typeof UserStatus)[keyof typeof UserStatus];
export interface AssociateFacesResponse {
  AssociatedFaces?: AssociatedFace[] | undefined;
  UnsuccessfulFaceAssociations?: UnsuccessfulFaceAssociation[] | undefined;
  UserStatus?: UserStatus | undefined;
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export declare class IdempotentParameterMismatchException extends __BaseException {
  readonly name: "IdempotentParameterMismatchException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      IdempotentParameterMismatchException,
      __BaseException
    >
  );
}
export declare class InternalServerError extends __BaseException {
  readonly name: "InternalServerError";
  readonly $fault: "server";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InternalServerError, __BaseException>
  );
}
export declare class InvalidParameterException extends __BaseException {
  readonly name: "InvalidParameterException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidParameterException, __BaseException>
  );
}
export declare class ProvisionedThroughputExceededException extends __BaseException {
  readonly name: "ProvisionedThroughputExceededException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      ProvisionedThroughputExceededException,
      __BaseException
    >
  );
}
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ServiceQuotaExceededException extends __BaseException {
  readonly name: "ServiceQuotaExceededException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ServiceQuotaExceededException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "server";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export declare const Attribute: {
  readonly AGE_RANGE: "AGE_RANGE";
  readonly ALL: "ALL";
  readonly BEARD: "BEARD";
  readonly DEFAULT: "DEFAULT";
  readonly EMOTIONS: "EMOTIONS";
  readonly EYEGLASSES: "EYEGLASSES";
  readonly EYES_OPEN: "EYES_OPEN";
  readonly EYE_DIRECTION: "EYE_DIRECTION";
  readonly FACE_OCCLUDED: "FACE_OCCLUDED";
  readonly GENDER: "GENDER";
  readonly MOUTH_OPEN: "MOUTH_OPEN";
  readonly MUSTACHE: "MUSTACHE";
  readonly SMILE: "SMILE";
  readonly SUNGLASSES: "SUNGLASSES";
};
export type Attribute = (typeof Attribute)[keyof typeof Attribute];
export interface AudioMetadata {
  Codec?: string | undefined;
  DurationMillis?: number | undefined;
  SampleRate?: number | undefined;
  NumberOfChannels?: number | undefined;
}
export interface BoundingBox {
  Width?: number | undefined;
  Height?: number | undefined;
  Left?: number | undefined;
  Top?: number | undefined;
}
export interface AuditImage {
  Bytes?: Uint8Array | undefined;
  S3Object?: S3Object | undefined;
  BoundingBox?: BoundingBox | undefined;
}
export interface Beard {
  Value?: boolean | undefined;
  Confidence?: number | undefined;
}
export interface BlackFrame {
  MaxPixelThreshold?: number | undefined;
  MinCoveragePercentage?: number | undefined;
}
export declare const BodyPart: {
  readonly FACE: "FACE";
  readonly HEAD: "HEAD";
  readonly LEFT_HAND: "LEFT_HAND";
  readonly RIGHT_HAND: "RIGHT_HAND";
};
export type BodyPart = (typeof BodyPart)[keyof typeof BodyPart];
export interface CoversBodyPart {
  Confidence?: number | undefined;
  Value?: boolean | undefined;
}
export declare const ProtectiveEquipmentType: {
  readonly FACE_COVER: "FACE_COVER";
  readonly HAND_COVER: "HAND_COVER";
  readonly HEAD_COVER: "HEAD_COVER";
};
export type ProtectiveEquipmentType =
  (typeof ProtectiveEquipmentType)[keyof typeof ProtectiveEquipmentType];
export interface EquipmentDetection {
  BoundingBox?: BoundingBox | undefined;
  Confidence?: number | undefined;
  Type?: ProtectiveEquipmentType | undefined;
  CoversBodyPart?: CoversBodyPart | undefined;
}
export interface ProtectiveEquipmentBodyPart {
  Name?: BodyPart | undefined;
  Confidence?: number | undefined;
  EquipmentDetections?: EquipmentDetection[] | undefined;
}
export declare const EmotionName: {
  readonly ANGRY: "ANGRY";
  readonly CALM: "CALM";
  readonly CONFUSED: "CONFUSED";
  readonly DISGUSTED: "DISGUSTED";
  readonly FEAR: "FEAR";
  readonly HAPPY: "HAPPY";
  readonly SAD: "SAD";
  readonly SURPRISED: "SURPRISED";
  readonly UNKNOWN: "UNKNOWN";
};
export type EmotionName = (typeof EmotionName)[keyof typeof EmotionName];
export interface Emotion {
  Type?: EmotionName | undefined;
  Confidence?: number | undefined;
}
export declare const LandmarkType: {
  readonly chinBottom: "chinBottom";
  readonly eyeLeft: "eyeLeft";
  readonly eyeRight: "eyeRight";
  readonly leftEyeBrowLeft: "leftEyeBrowLeft";
  readonly leftEyeBrowRight: "leftEyeBrowRight";
  readonly leftEyeBrowUp: "leftEyeBrowUp";
  readonly leftEyeDown: "leftEyeDown";
  readonly leftEyeLeft: "leftEyeLeft";
  readonly leftEyeRight: "leftEyeRight";
  readonly leftEyeUp: "leftEyeUp";
  readonly leftPupil: "leftPupil";
  readonly midJawlineLeft: "midJawlineLeft";
  readonly midJawlineRight: "midJawlineRight";
  readonly mouthDown: "mouthDown";
  readonly mouthLeft: "mouthLeft";
  readonly mouthRight: "mouthRight";
  readonly mouthUp: "mouthUp";
  readonly nose: "nose";
  readonly noseLeft: "noseLeft";
  readonly noseRight: "noseRight";
  readonly rightEyeBrowLeft: "rightEyeBrowLeft";
  readonly rightEyeBrowRight: "rightEyeBrowRight";
  readonly rightEyeBrowUp: "rightEyeBrowUp";
  readonly rightEyeDown: "rightEyeDown";
  readonly rightEyeLeft: "rightEyeLeft";
  readonly rightEyeRight: "rightEyeRight";
  readonly rightEyeUp: "rightEyeUp";
  readonly rightPupil: "rightPupil";
  readonly upperJawlineLeft: "upperJawlineLeft";
  readonly upperJawlineRight: "upperJawlineRight";
};
export type LandmarkType = (typeof LandmarkType)[keyof typeof LandmarkType];
export interface Landmark {
  Type?: LandmarkType | undefined;
  X?: number | undefined;
  Y?: number | undefined;
}
export interface Pose {
  Roll?: number | undefined;
  Yaw?: number | undefined;
  Pitch?: number | undefined;
}
export interface ImageQuality {
  Brightness?: number | undefined;
  Sharpness?: number | undefined;
}
export interface Smile {
  Value?: boolean | undefined;
  Confidence?: number | undefined;
}
export interface ComparedFace {
  BoundingBox?: BoundingBox | undefined;
  Confidence?: number | undefined;
  Landmarks?: Landmark[] | undefined;
  Pose?: Pose | undefined;
  Quality?: ImageQuality | undefined;
  Emotions?: Emotion[] | undefined;
  Smile?: Smile | undefined;
}
export declare const KnownGenderType: {
  readonly Female: "Female";
  readonly Male: "Male";
  readonly Nonbinary: "Nonbinary";
  readonly Unlisted: "Unlisted";
};
export type KnownGenderType =
  (typeof KnownGenderType)[keyof typeof KnownGenderType];
export interface KnownGender {
  Type?: KnownGenderType | undefined;
}
export interface Celebrity {
  Urls?: string[] | undefined;
  Name?: string | undefined;
  Id?: string | undefined;
  Face?: ComparedFace | undefined;
  MatchConfidence?: number | undefined;
  KnownGender?: KnownGender | undefined;
}
export interface EyeDirection {
  Yaw?: number | undefined;
  Pitch?: number | undefined;
  Confidence?: number | undefined;
}
export interface Eyeglasses {
  Value?: boolean | undefined;
  Confidence?: number | undefined;
}
export interface EyeOpen {
  Value?: boolean | undefined;
  Confidence?: number | undefined;
}
export interface FaceOccluded {
  Value?: boolean | undefined;
  Confidence?: number | undefined;
}
export declare const GenderType: {
  readonly Female: "Female";
  readonly Male: "Male";
};
export type GenderType = (typeof GenderType)[keyof typeof GenderType];
export interface Gender {
  Value?: GenderType | undefined;
  Confidence?: number | undefined;
}
export interface MouthOpen {
  Value?: boolean | undefined;
  Confidence?: number | undefined;
}
export interface Mustache {
  Value?: boolean | undefined;
  Confidence?: number | undefined;
}
export interface Sunglasses {
  Value?: boolean | undefined;
  Confidence?: number | undefined;
}
export interface FaceDetail {
  BoundingBox?: BoundingBox | undefined;
  AgeRange?: AgeRange | undefined;
  Smile?: Smile | undefined;
  Eyeglasses?: Eyeglasses | undefined;
  Sunglasses?: Sunglasses | undefined;
  Gender?: Gender | undefined;
  Beard?: Beard | undefined;
  Mustache?: Mustache | undefined;
  EyesOpen?: EyeOpen | undefined;
  MouthOpen?: MouthOpen | undefined;
  Emotions?: Emotion[] | undefined;
  Landmarks?: Landmark[] | undefined;
  Pose?: Pose | undefined;
  Quality?: ImageQuality | undefined;
  Confidence?: number | undefined;
  FaceOccluded?: FaceOccluded | undefined;
  EyeDirection?: EyeDirection | undefined;
}
export interface CelebrityDetail {
  Urls?: string[] | undefined;
  Name?: string | undefined;
  Id?: string | undefined;
  Confidence?: number | undefined;
  BoundingBox?: BoundingBox | undefined;
  Face?: FaceDetail | undefined;
  KnownGender?: KnownGender | undefined;
}
export interface CelebrityRecognition {
  Timestamp?: number | undefined;
  Celebrity?: CelebrityDetail | undefined;
}
export declare const CelebrityRecognitionSortBy: {
  readonly ID: "ID";
  readonly TIMESTAMP: "TIMESTAMP";
};
export type CelebrityRecognitionSortBy =
  (typeof CelebrityRecognitionSortBy)[keyof typeof CelebrityRecognitionSortBy];
export interface ComparedSourceImageFace {
  BoundingBox?: BoundingBox | undefined;
  Confidence?: number | undefined;
}
export declare const QualityFilter: {
  readonly AUTO: "AUTO";
  readonly HIGH: "HIGH";
  readonly LOW: "LOW";
  readonly MEDIUM: "MEDIUM";
  readonly NONE: "NONE";
};
export type QualityFilter = (typeof QualityFilter)[keyof typeof QualityFilter];
export interface Image {
  Bytes?: Uint8Array | undefined;
  S3Object?: S3Object | undefined;
}
export interface CompareFacesRequest {
  SourceImage: Image | undefined;
  TargetImage: Image | undefined;
  SimilarityThreshold?: number | undefined;
  QualityFilter?: QualityFilter | undefined;
}
export interface CompareFacesMatch {
  Similarity?: number | undefined;
  Face?: ComparedFace | undefined;
}
export declare const OrientationCorrection: {
  readonly ROTATE_0: "ROTATE_0";
  readonly ROTATE_180: "ROTATE_180";
  readonly ROTATE_270: "ROTATE_270";
  readonly ROTATE_90: "ROTATE_90";
};
export type OrientationCorrection =
  (typeof OrientationCorrection)[keyof typeof OrientationCorrection];
export interface CompareFacesResponse {
  SourceImageFace?: ComparedSourceImageFace | undefined;
  FaceMatches?: CompareFacesMatch[] | undefined;
  UnmatchedFaces?: ComparedFace[] | undefined;
  SourceImageOrientationCorrection?: OrientationCorrection | undefined;
  TargetImageOrientationCorrection?: OrientationCorrection | undefined;
}
export declare class ImageTooLargeException extends __BaseException {
  readonly name: "ImageTooLargeException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ImageTooLargeException, __BaseException>
  );
}
export declare class InvalidImageFormatException extends __BaseException {
  readonly name: "InvalidImageFormatException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidImageFormatException, __BaseException>
  );
}
export declare class InvalidS3ObjectException extends __BaseException {
  readonly name: "InvalidS3ObjectException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidS3ObjectException, __BaseException>
  );
}
export interface ConnectedHomeSettings {
  Labels: string[] | undefined;
  MinConfidence?: number | undefined;
}
export interface ConnectedHomeSettingsForUpdate {
  Labels?: string[] | undefined;
  MinConfidence?: number | undefined;
}
export declare const ContentClassifier: {
  readonly FREE_OF_ADULT_CONTENT: "FreeOfAdultContent";
  readonly FREE_OF_PERSONALLY_IDENTIFIABLE_INFORMATION: "FreeOfPersonallyIdentifiableInformation";
};
export type ContentClassifier =
  (typeof ContentClassifier)[keyof typeof ContentClassifier];
export declare const ContentModerationAggregateBy: {
  readonly SEGMENTS: "SEGMENTS";
  readonly TIMESTAMPS: "TIMESTAMPS";
};
export type ContentModerationAggregateBy =
  (typeof ContentModerationAggregateBy)[keyof typeof ContentModerationAggregateBy];
export interface ContentType {
  Confidence?: number | undefined;
  Name?: string | undefined;
}
export interface ModerationLabel {
  Confidence?: number | undefined;
  Name?: string | undefined;
  ParentName?: string | undefined;
  TaxonomyLevel?: number | undefined;
}
export interface ContentModerationDetection {
  Timestamp?: number | undefined;
  ModerationLabel?: ModerationLabel | undefined;
  StartTimestampMillis?: number | undefined;
  EndTimestampMillis?: number | undefined;
  DurationMillis?: number | undefined;
  ContentTypes?: ContentType[] | undefined;
}
export declare const ContentModerationSortBy: {
  readonly NAME: "NAME";
  readonly TIMESTAMP: "TIMESTAMP";
};
export type ContentModerationSortBy =
  (typeof ContentModerationSortBy)[keyof typeof ContentModerationSortBy];
export interface OutputConfig {
  S3Bucket?: string | undefined;
  S3KeyPrefix?: string | undefined;
}
export interface CopyProjectVersionRequest {
  SourceProjectArn: string | undefined;
  SourceProjectVersionArn: string | undefined;
  DestinationProjectArn: string | undefined;
  VersionName: string | undefined;
  OutputConfig: OutputConfig | undefined;
  Tags?: Record<string, string> | undefined;
  KmsKeyId?: string | undefined;
}
export interface CopyProjectVersionResponse {
  ProjectVersionArn?: string | undefined;
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class ResourceInUseException extends __BaseException {
  readonly name: "ResourceInUseException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceInUseException, __BaseException>
  );
}
export interface CreateCollectionRequest {
  CollectionId: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateCollectionResponse {
  StatusCode?: number | undefined;
  CollectionArn?: string | undefined;
  FaceModelVersion?: string | undefined;
}
export declare class ResourceAlreadyExistsException extends __BaseException {
  readonly name: "ResourceAlreadyExistsException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceAlreadyExistsException, __BaseException>
  );
}
export interface DatasetSource {
  GroundTruthManifest?: GroundTruthManifest | undefined;
  DatasetArn?: string | undefined;
}
export declare const DatasetType: {
  readonly TEST: "TEST";
  readonly TRAIN: "TRAIN";
};
export type DatasetType = (typeof DatasetType)[keyof typeof DatasetType];
export interface CreateDatasetRequest {
  DatasetSource?: DatasetSource | undefined;
  DatasetType: DatasetType | undefined;
  ProjectArn: string | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateDatasetResponse {
  DatasetArn?: string | undefined;
}
export interface LivenessOutputConfig {
  S3Bucket: string | undefined;
  S3KeyPrefix?: string | undefined;
}
export interface CreateFaceLivenessSessionRequestSettings {
  OutputConfig?: LivenessOutputConfig | undefined;
  AuditImagesLimit?: number | undefined;
}
export interface CreateFaceLivenessSessionRequest {
  KmsKeyId?: string | undefined;
  Settings?: CreateFaceLivenessSessionRequestSettings | undefined;
  ClientRequestToken?: string | undefined;
}
export interface CreateFaceLivenessSessionResponse {
  SessionId: string | undefined;
}
export declare const ProjectAutoUpdate: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type ProjectAutoUpdate =
  (typeof ProjectAutoUpdate)[keyof typeof ProjectAutoUpdate];
export declare const CustomizationFeature: {
  readonly CONTENT_MODERATION: "CONTENT_MODERATION";
  readonly CUSTOM_LABELS: "CUSTOM_LABELS";
};
export type CustomizationFeature =
  (typeof CustomizationFeature)[keyof typeof CustomizationFeature];
export interface CreateProjectRequest {
  ProjectName: string | undefined;
  Feature?: CustomizationFeature | undefined;
  AutoUpdate?: ProjectAutoUpdate | undefined;
  Tags?: Record<string, string> | undefined;
}
export interface CreateProjectResponse {
  ProjectArn?: string | undefined;
}
export interface CustomizationFeatureContentModerationConfig {
  ConfidenceThreshold?: number | undefined;
}
export interface CustomizationFeatureConfig {
  ContentModeration?: CustomizationFeatureContentModerationConfig | undefined;
}
export interface TestingData {
  Assets?: Asset[] | undefined;
  AutoCreate?: boolean | undefined;
}
export interface TrainingData {
  Assets?: Asset[] | undefined;
}
export interface CreateProjectVersionRequest {
  ProjectArn: string | undefined;
  VersionName: string | undefined;
  OutputConfig: OutputConfig | undefined;
  TrainingData?: TrainingData | undefined;
  TestingData?: TestingData | undefined;
  Tags?: Record<string, string> | undefined;
  KmsKeyId?: string | undefined;
  VersionDescription?: string | undefined;
  FeatureConfig?: CustomizationFeatureConfig | undefined;
}
export interface CreateProjectVersionResponse {
  ProjectVersionArn?: string | undefined;
}
export interface StreamProcessorDataSharingPreference {
  OptIn: boolean | undefined;
}
export interface KinesisVideoStream {
  Arn?: string | undefined;
}
export interface StreamProcessorInput {
  KinesisVideoStream?: KinesisVideoStream | undefined;
}
export interface StreamProcessorNotificationChannel {
  SNSTopicArn: string | undefined;
}
export interface KinesisDataStream {
  Arn?: string | undefined;
}
export interface S3Destination {
  Bucket?: string | undefined;
  KeyPrefix?: string | undefined;
}
export interface StreamProcessorOutput {
  KinesisDataStream?: KinesisDataStream | undefined;
  S3Destination?: S3Destination | undefined;
}
export interface Point {
  X?: number | undefined;
  Y?: number | undefined;
}
export interface RegionOfInterest {
  BoundingBox?: BoundingBox | undefined;
  Polygon?: Point[] | undefined;
}
export interface FaceSearchSettings {
  CollectionId?: string | undefined;
  FaceMatchThreshold?: number | undefined;
}
export interface StreamProcessorSettings {
  FaceSearch?: FaceSearchSettings | undefined;
  ConnectedHome?: ConnectedHomeSettings | undefined;
}
export interface CreateStreamProcessorRequest {
  Input: StreamProcessorInput | undefined;
  Output: StreamProcessorOutput | undefined;
  Name: string | undefined;
  Settings: StreamProcessorSettings | undefined;
  RoleArn: string | undefined;
  Tags?: Record<string, string> | undefined;
  NotificationChannel?: StreamProcessorNotificationChannel | undefined;
  KmsKeyId?: string | undefined;
  RegionsOfInterest?: RegionOfInterest[] | undefined;
  DataSharingPreference?: StreamProcessorDataSharingPreference | undefined;
}
export interface CreateStreamProcessorResponse {
  StreamProcessorArn?: string | undefined;
}
export interface CreateUserRequest {
  CollectionId: string | undefined;
  UserId: string | undefined;
  ClientRequestToken?: string | undefined;
}
export interface CreateUserResponse {}
export interface Geometry {
  BoundingBox?: BoundingBox | undefined;
  Polygon?: Point[] | undefined;
}
export interface CustomLabel {
  Name?: string | undefined;
  Confidence?: number | undefined;
  Geometry?: Geometry | undefined;
}
export interface DatasetChanges {
  GroundTruth: Uint8Array | undefined;
}
export interface DatasetStats {
  LabeledEntries?: number | undefined;
  TotalEntries?: number | undefined;
  TotalLabels?: number | undefined;
  ErrorEntries?: number | undefined;
}
export declare const DatasetStatus: {
  readonly CREATE_COMPLETE: "CREATE_COMPLETE";
  readonly CREATE_FAILED: "CREATE_FAILED";
  readonly CREATE_IN_PROGRESS: "CREATE_IN_PROGRESS";
  readonly DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS";
  readonly UPDATE_COMPLETE: "UPDATE_COMPLETE";
  readonly UPDATE_FAILED: "UPDATE_FAILED";
  readonly UPDATE_IN_PROGRESS: "UPDATE_IN_PROGRESS";
};
export type DatasetStatus = (typeof DatasetStatus)[keyof typeof DatasetStatus];
export declare const DatasetStatusMessageCode: {
  readonly CLIENT_ERROR: "CLIENT_ERROR";
  readonly SERVICE_ERROR: "SERVICE_ERROR";
  readonly SUCCESS: "SUCCESS";
};
export type DatasetStatusMessageCode =
  (typeof DatasetStatusMessageCode)[keyof typeof DatasetStatusMessageCode];
export interface DatasetDescription {
  CreationTimestamp?: Date | undefined;
  LastUpdatedTimestamp?: Date | undefined;
  Status?: DatasetStatus | undefined;
  StatusMessage?: string | undefined;
  StatusMessageCode?: DatasetStatusMessageCode | undefined;
  DatasetStats?: DatasetStats | undefined;
}
export interface DatasetLabelStats {
  EntryCount?: number | undefined;
  BoundingBoxCount?: number | undefined;
}
export interface DatasetLabelDescription {
  LabelName?: string | undefined;
  LabelStats?: DatasetLabelStats | undefined;
}
export interface DatasetMetadata {
  CreationTimestamp?: Date | undefined;
  DatasetType?: DatasetType | undefined;
  DatasetArn?: string | undefined;
  Status?: DatasetStatus | undefined;
  StatusMessage?: string | undefined;
  StatusMessageCode?: DatasetStatusMessageCode | undefined;
}
export interface DeleteCollectionRequest {
  CollectionId: string | undefined;
}
export interface DeleteCollectionResponse {
  StatusCode?: number | undefined;
}
export interface DeleteDatasetRequest {
  DatasetArn: string | undefined;
}
export interface DeleteDatasetResponse {}
export interface DeleteFacesRequest {
  CollectionId: string | undefined;
  FaceIds: string[] | undefined;
}
export declare const UnsuccessfulFaceDeletionReason: {
  readonly ASSOCIATED_TO_AN_EXISTING_USER: "ASSOCIATED_TO_AN_EXISTING_USER";
  readonly FACE_NOT_FOUND: "FACE_NOT_FOUND";
};
export type UnsuccessfulFaceDeletionReason =
  (typeof UnsuccessfulFaceDeletionReason)[keyof typeof UnsuccessfulFaceDeletionReason];
export interface UnsuccessfulFaceDeletion {
  FaceId?: string | undefined;
  UserId?: string | undefined;
  Reasons?: UnsuccessfulFaceDeletionReason[] | undefined;
}
export interface DeleteFacesResponse {
  DeletedFaces?: string[] | undefined;
  UnsuccessfulFaceDeletions?: UnsuccessfulFaceDeletion[] | undefined;
}
export interface DeleteProjectRequest {
  ProjectArn: string | undefined;
}
export declare const ProjectStatus: {
  readonly CREATED: "CREATED";
  readonly CREATING: "CREATING";
  readonly DELETING: "DELETING";
};
export type ProjectStatus = (typeof ProjectStatus)[keyof typeof ProjectStatus];
export interface DeleteProjectResponse {
  Status?: ProjectStatus | undefined;
}
export interface DeleteProjectPolicyRequest {
  ProjectArn: string | undefined;
  PolicyName: string | undefined;
  PolicyRevisionId?: string | undefined;
}
export interface DeleteProjectPolicyResponse {}
export declare class InvalidPolicyRevisionIdException extends __BaseException {
  readonly name: "InvalidPolicyRevisionIdException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      InvalidPolicyRevisionIdException,
      __BaseException
    >
  );
}
export interface DeleteProjectVersionRequest {
  ProjectVersionArn: string | undefined;
}
export declare const ProjectVersionStatus: {
  readonly COPYING_COMPLETED: "COPYING_COMPLETED";
  readonly COPYING_FAILED: "COPYING_FAILED";
  readonly COPYING_IN_PROGRESS: "COPYING_IN_PROGRESS";
  readonly DELETING: "DELETING";
  readonly DEPRECATED: "DEPRECATED";
  readonly EXPIRED: "EXPIRED";
  readonly FAILED: "FAILED";
  readonly RUNNING: "RUNNING";
  readonly STARTING: "STARTING";
  readonly STOPPED: "STOPPED";
  readonly STOPPING: "STOPPING";
  readonly TRAINING_COMPLETED: "TRAINING_COMPLETED";
  readonly TRAINING_FAILED: "TRAINING_FAILED";
  readonly TRAINING_IN_PROGRESS: "TRAINING_IN_PROGRESS";
};
export type ProjectVersionStatus =
  (typeof ProjectVersionStatus)[keyof typeof ProjectVersionStatus];
export interface DeleteProjectVersionResponse {
  Status?: ProjectVersionStatus | undefined;
}
export interface DeleteStreamProcessorRequest {
  Name: string | undefined;
}
export interface DeleteStreamProcessorResponse {}
export interface DeleteUserRequest {
  CollectionId: string | undefined;
  UserId: string | undefined;
  ClientRequestToken?: string | undefined;
}
export interface DeleteUserResponse {}
export interface DescribeCollectionRequest {
  CollectionId: string | undefined;
}
export interface DescribeCollectionResponse {
  FaceCount?: number | undefined;
  FaceModelVersion?: string | undefined;
  CollectionARN?: string | undefined;
  CreationTimestamp?: Date | undefined;
  UserCount?: number | undefined;
}
export interface DescribeDatasetRequest {
  DatasetArn: string | undefined;
}
export interface DescribeDatasetResponse {
  DatasetDescription?: DatasetDescription | undefined;
}
export interface DescribeProjectsRequest {
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  ProjectNames?: string[] | undefined;
  Features?: CustomizationFeature[] | undefined;
}
export interface ProjectDescription {
  ProjectArn?: string | undefined;
  CreationTimestamp?: Date | undefined;
  Status?: ProjectStatus | undefined;
  Datasets?: DatasetMetadata[] | undefined;
  Feature?: CustomizationFeature | undefined;
  AutoUpdate?: ProjectAutoUpdate | undefined;
}
export interface DescribeProjectsResponse {
  ProjectDescriptions?: ProjectDescription[] | undefined;
  NextToken?: string | undefined;
}
export declare class InvalidPaginationTokenException extends __BaseException {
  readonly name: "InvalidPaginationTokenException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      InvalidPaginationTokenException,
      __BaseException
    >
  );
}
export interface DescribeProjectVersionsRequest {
  ProjectArn: string | undefined;
  VersionNames?: string[] | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface Summary {
  S3Object?: S3Object | undefined;
}
export interface EvaluationResult {
  F1Score?: number | undefined;
  Summary?: Summary | undefined;
}
export interface ValidationData {
  Assets?: Asset[] | undefined;
}
export interface TestingDataResult {
  Input?: TestingData | undefined;
  Output?: TestingData | undefined;
  Validation?: ValidationData | undefined;
}
export interface TrainingDataResult {
  Input?: TrainingData | undefined;
  Output?: TrainingData | undefined;
  Validation?: ValidationData | undefined;
}
export interface ProjectVersionDescription {
  ProjectVersionArn?: string | undefined;
  CreationTimestamp?: Date | undefined;
  MinInferenceUnits?: number | undefined;
  Status?: ProjectVersionStatus | undefined;
  StatusMessage?: string | undefined;
  BillableTrainingTimeInSeconds?: number | undefined;
  TrainingEndTimestamp?: Date | undefined;
  OutputConfig?: OutputConfig | undefined;
  TrainingDataResult?: TrainingDataResult | undefined;
  TestingDataResult?: TestingDataResult | undefined;
  EvaluationResult?: EvaluationResult | undefined;
  ManifestSummary?: GroundTruthManifest | undefined;
  KmsKeyId?: string | undefined;
  MaxInferenceUnits?: number | undefined;
  SourceProjectVersionArn?: string | undefined;
  VersionDescription?: string | undefined;
  Feature?: CustomizationFeature | undefined;
  BaseModelVersion?: string | undefined;
  FeatureConfig?: CustomizationFeatureConfig | undefined;
}
export interface DescribeProjectVersionsResponse {
  ProjectVersionDescriptions?: ProjectVersionDescription[] | undefined;
  NextToken?: string | undefined;
}
export interface DescribeStreamProcessorRequest {
  Name: string | undefined;
}
export declare const StreamProcessorStatus: {
  readonly FAILED: "FAILED";
  readonly RUNNING: "RUNNING";
  readonly STARTING: "STARTING";
  readonly STOPPED: "STOPPED";
  readonly STOPPING: "STOPPING";
  readonly UPDATING: "UPDATING";
};
export type StreamProcessorStatus =
  (typeof StreamProcessorStatus)[keyof typeof StreamProcessorStatus];
export interface DescribeStreamProcessorResponse {
  Name?: string | undefined;
  StreamProcessorArn?: string | undefined;
  Status?: StreamProcessorStatus | undefined;
  StatusMessage?: string | undefined;
  CreationTimestamp?: Date | undefined;
  LastUpdateTimestamp?: Date | undefined;
  Input?: StreamProcessorInput | undefined;
  Output?: StreamProcessorOutput | undefined;
  RoleArn?: string | undefined;
  Settings?: StreamProcessorSettings | undefined;
  NotificationChannel?: StreamProcessorNotificationChannel | undefined;
  KmsKeyId?: string | undefined;
  RegionsOfInterest?: RegionOfInterest[] | undefined;
  DataSharingPreference?: StreamProcessorDataSharingPreference | undefined;
}
export interface DetectCustomLabelsRequest {
  ProjectVersionArn: string | undefined;
  Image: Image | undefined;
  MaxResults?: number | undefined;
  MinConfidence?: number | undefined;
}
export interface DetectCustomLabelsResponse {
  CustomLabels?: CustomLabel[] | undefined;
}
export declare class ResourceNotReadyException extends __BaseException {
  readonly name: "ResourceNotReadyException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotReadyException, __BaseException>
  );
}
export interface DetectFacesRequest {
  Image: Image | undefined;
  Attributes?: Attribute[] | undefined;
}
export interface DetectFacesResponse {
  FaceDetails?: FaceDetail[] | undefined;
  OrientationCorrection?: OrientationCorrection | undefined;
}
export interface DetectionFilter {
  MinConfidence?: number | undefined;
  MinBoundingBoxHeight?: number | undefined;
  MinBoundingBoxWidth?: number | undefined;
}
export declare const DetectLabelsFeatureName: {
  readonly GENERAL_LABELS: "GENERAL_LABELS";
  readonly IMAGE_PROPERTIES: "IMAGE_PROPERTIES";
};
export type DetectLabelsFeatureName =
  (typeof DetectLabelsFeatureName)[keyof typeof DetectLabelsFeatureName];
export interface GeneralLabelsSettings {
  LabelInclusionFilters?: string[] | undefined;
  LabelExclusionFilters?: string[] | undefined;
  LabelCategoryInclusionFilters?: string[] | undefined;
  LabelCategoryExclusionFilters?: string[] | undefined;
}
export interface DetectLabelsImagePropertiesSettings {
  MaxDominantColors?: number | undefined;
}
export interface DetectLabelsSettings {
  GeneralLabels?: GeneralLabelsSettings | undefined;
  ImageProperties?: DetectLabelsImagePropertiesSettings | undefined;
}
export interface DetectLabelsRequest {
  Image: Image | undefined;
  MaxLabels?: number | undefined;
  MinConfidence?: number | undefined;
  Features?: DetectLabelsFeatureName[] | undefined;
  Settings?: DetectLabelsSettings | undefined;
}
export interface DominantColor {
  Red?: number | undefined;
  Blue?: number | undefined;
  Green?: number | undefined;
  HexCode?: string | undefined;
  CSSColor?: string | undefined;
  SimplifiedColor?: string | undefined;
  PixelPercent?: number | undefined;
}
export interface DetectLabelsImageQuality {
  Brightness?: number | undefined;
  Sharpness?: number | undefined;
  Contrast?: number | undefined;
}
export interface DetectLabelsImageBackground {
  Quality?: DetectLabelsImageQuality | undefined;
  DominantColors?: DominantColor[] | undefined;
}
export interface DetectLabelsImageForeground {
  Quality?: DetectLabelsImageQuality | undefined;
  DominantColors?: DominantColor[] | undefined;
}
export interface DetectLabelsImageProperties {
  Quality?: DetectLabelsImageQuality | undefined;
  DominantColors?: DominantColor[] | undefined;
  Foreground?: DetectLabelsImageForeground | undefined;
  Background?: DetectLabelsImageBackground | undefined;
}
export interface LabelAlias {
  Name?: string | undefined;
}
export interface LabelCategory {
  Name?: string | undefined;
}
export interface Instance {
  BoundingBox?: BoundingBox | undefined;
  Confidence?: number | undefined;
  DominantColors?: DominantColor[] | undefined;
}
export interface Parent {
  Name?: string | undefined;
}
export interface Label {
  Name?: string | undefined;
  Confidence?: number | undefined;
  Instances?: Instance[] | undefined;
  Parents?: Parent[] | undefined;
  Aliases?: LabelAlias[] | undefined;
  Categories?: LabelCategory[] | undefined;
}
export interface DetectLabelsResponse {
  Labels?: Label[] | undefined;
  OrientationCorrection?: OrientationCorrection | undefined;
  LabelModelVersion?: string | undefined;
  ImageProperties?: DetectLabelsImageProperties | undefined;
}
export interface HumanLoopDataAttributes {
  ContentClassifiers?: ContentClassifier[] | undefined;
}
export interface HumanLoopConfig {
  HumanLoopName: string | undefined;
  FlowDefinitionArn: string | undefined;
  DataAttributes?: HumanLoopDataAttributes | undefined;
}
export interface DetectModerationLabelsRequest {
  Image: Image | undefined;
  MinConfidence?: number | undefined;
  HumanLoopConfig?: HumanLoopConfig | undefined;
  ProjectVersion?: string | undefined;
}
export interface HumanLoopActivationOutput {
  HumanLoopArn?: string | undefined;
  HumanLoopActivationReasons?: string[] | undefined;
  HumanLoopActivationConditionsEvaluationResults?:
    | __AutomaticJsonStringConversion
    | string
    | undefined;
}
export interface DetectModerationLabelsResponse {
  ModerationLabels?: ModerationLabel[] | undefined;
  ModerationModelVersion?: string | undefined;
  HumanLoopActivationOutput?: HumanLoopActivationOutput | undefined;
  ProjectVersion?: string | undefined;
  ContentTypes?: ContentType[] | undefined;
}
export declare class HumanLoopQuotaExceededException extends __BaseException {
  readonly name: "HumanLoopQuotaExceededException";
  readonly $fault: "client";
  ResourceType?: string | undefined;
  QuotaCode?: string | undefined;
  ServiceCode?: string | undefined;
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      HumanLoopQuotaExceededException,
      __BaseException
    >
  );
}
export interface ProtectiveEquipmentSummarizationAttributes {
  MinConfidence: number | undefined;
  RequiredEquipmentTypes: ProtectiveEquipmentType[] | undefined;
}
export interface DetectProtectiveEquipmentRequest {
  Image: Image | undefined;
  SummarizationAttributes?:
    | ProtectiveEquipmentSummarizationAttributes
    | undefined;
}
export interface ProtectiveEquipmentPerson {
  BodyParts?: ProtectiveEquipmentBodyPart[] | undefined;
  BoundingBox?: BoundingBox | undefined;
  Confidence?: number | undefined;
  Id?: number | undefined;
}
export interface ProtectiveEquipmentSummary {
  PersonsWithRequiredEquipment?: number[] | undefined;
  PersonsWithoutRequiredEquipment?: number[] | undefined;
  PersonsIndeterminate?: number[] | undefined;
}
export interface DetectProtectiveEquipmentResponse {
  ProtectiveEquipmentModelVersion?: string | undefined;
  Persons?: ProtectiveEquipmentPerson[] | undefined;
  Summary?: ProtectiveEquipmentSummary | undefined;
}
export interface DetectTextFilters {
  WordFilter?: DetectionFilter | undefined;
  RegionsOfInterest?: RegionOfInterest[] | undefined;
}
export interface DetectTextRequest {
  Image: Image | undefined;
  Filters?: DetectTextFilters | undefined;
}
export declare const TextTypes: {
  readonly LINE: "LINE";
  readonly WORD: "WORD";
};
export type TextTypes = (typeof TextTypes)[keyof typeof TextTypes];
export interface TextDetection {
  DetectedText?: string | undefined;
  Type?: TextTypes | undefined;
  Id?: number | undefined;
  ParentId?: number | undefined;
  Confidence?: number | undefined;
  Geometry?: Geometry | undefined;
}
export interface DetectTextResponse {
  TextDetections?: TextDetection[] | undefined;
  TextModelVersion?: string | undefined;
}
export interface DisassociatedFace {
  FaceId?: string | undefined;
}
export interface DisassociateFacesRequest {
  CollectionId: string | undefined;
  UserId: string | undefined;
  ClientRequestToken?: string | undefined;
  FaceIds: string[] | undefined;
}
export declare const UnsuccessfulFaceDisassociationReason: {
  readonly ASSOCIATED_TO_A_DIFFERENT_USER: "ASSOCIATED_TO_A_DIFFERENT_USER";
  readonly FACE_NOT_FOUND: "FACE_NOT_FOUND";
};
export type UnsuccessfulFaceDisassociationReason =
  (typeof UnsuccessfulFaceDisassociationReason)[keyof typeof UnsuccessfulFaceDisassociationReason];
export interface UnsuccessfulFaceDisassociation {
  FaceId?: string | undefined;
  UserId?: string | undefined;
  Reasons?: UnsuccessfulFaceDisassociationReason[] | undefined;
}
export interface DisassociateFacesResponse {
  DisassociatedFaces?: DisassociatedFace[] | undefined;
  UnsuccessfulFaceDisassociations?:
    | UnsuccessfulFaceDisassociation[]
    | undefined;
  UserStatus?: UserStatus | undefined;
}
export interface DistributeDataset {
  Arn: string | undefined;
}
export interface DistributeDatasetEntriesRequest {
  Datasets: DistributeDataset[] | undefined;
}
export interface DistributeDatasetEntriesResponse {}
export interface Face {
  FaceId?: string | undefined;
  BoundingBox?: BoundingBox | undefined;
  ImageId?: string | undefined;
  ExternalImageId?: string | undefined;
  Confidence?: number | undefined;
  IndexFacesModelVersion?: string | undefined;
  UserId?: string | undefined;
}
export declare const FaceAttributes: {
  readonly ALL: "ALL";
  readonly DEFAULT: "DEFAULT";
};
export type FaceAttributes =
  (typeof FaceAttributes)[keyof typeof FaceAttributes];
export interface FaceDetection {
  Timestamp?: number | undefined;
  Face?: FaceDetail | undefined;
}
export interface FaceMatch {
  Similarity?: number | undefined;
  Face?: Face | undefined;
}
export interface FaceRecord {
  Face?: Face | undefined;
  FaceDetail?: FaceDetail | undefined;
}
export declare const FaceSearchSortBy: {
  readonly INDEX: "INDEX";
  readonly TIMESTAMP: "TIMESTAMP";
};
export type FaceSearchSortBy =
  (typeof FaceSearchSortBy)[keyof typeof FaceSearchSortBy];
export interface GetCelebrityInfoRequest {
  Id: string | undefined;
}
export interface GetCelebrityInfoResponse {
  Urls?: string[] | undefined;
  Name?: string | undefined;
  KnownGender?: KnownGender | undefined;
}
export interface GetCelebrityRecognitionRequest {
  JobId: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  SortBy?: CelebrityRecognitionSortBy | undefined;
}
export declare const VideoJobStatus: {
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly SUCCEEDED: "SUCCEEDED";
};
export type VideoJobStatus =
  (typeof VideoJobStatus)[keyof typeof VideoJobStatus];
export interface Video {
  S3Object?: S3Object | undefined;
}
export declare const VideoColorRange: {
  readonly FULL: "FULL";
  readonly LIMITED: "LIMITED";
};
export type VideoColorRange =
  (typeof VideoColorRange)[keyof typeof VideoColorRange];
export interface VideoMetadata {
  Codec?: string | undefined;
  DurationMillis?: number | undefined;
  Format?: string | undefined;
  FrameRate?: number | undefined;
  FrameHeight?: number | undefined;
  FrameWidth?: number | undefined;
  ColorRange?: VideoColorRange | undefined;
}
export interface GetCelebrityRecognitionResponse {
  JobStatus?: VideoJobStatus | undefined;
  StatusMessage?: string | undefined;
  VideoMetadata?: VideoMetadata | undefined;
  NextToken?: string | undefined;
  Celebrities?: CelebrityRecognition[] | undefined;
  JobId?: string | undefined;
  Video?: Video | undefined;
  JobTag?: string | undefined;
}
export interface GetContentModerationRequest {
  JobId: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  SortBy?: ContentModerationSortBy | undefined;
  AggregateBy?: ContentModerationAggregateBy | undefined;
}
export interface GetContentModerationRequestMetadata {
  SortBy?: ContentModerationSortBy | undefined;
  AggregateBy?: ContentModerationAggregateBy | undefined;
}
export interface GetContentModerationResponse {
  JobStatus?: VideoJobStatus | undefined;
  StatusMessage?: string | undefined;
  VideoMetadata?: VideoMetadata | undefined;
  ModerationLabels?: ContentModerationDetection[] | undefined;
  NextToken?: string | undefined;
  ModerationModelVersion?: string | undefined;
  JobId?: string | undefined;
  Video?: Video | undefined;
  JobTag?: string | undefined;
  GetRequestMetadata?: GetContentModerationRequestMetadata | undefined;
}
export interface GetFaceDetectionRequest {
  JobId: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface GetFaceDetectionResponse {
  JobStatus?: VideoJobStatus | undefined;
  StatusMessage?: string | undefined;
  VideoMetadata?: VideoMetadata | undefined;
  NextToken?: string | undefined;
  Faces?: FaceDetection[] | undefined;
  JobId?: string | undefined;
  Video?: Video | undefined;
  JobTag?: string | undefined;
}
export interface GetFaceLivenessSessionResultsRequest {
  SessionId: string | undefined;
}
export declare const LivenessSessionStatus: {
  readonly CREATED: "CREATED";
  readonly EXPIRED: "EXPIRED";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly SUCCEEDED: "SUCCEEDED";
};
export type LivenessSessionStatus =
  (typeof LivenessSessionStatus)[keyof typeof LivenessSessionStatus];
export interface GetFaceLivenessSessionResultsResponse {
  SessionId: string | undefined;
  Status: LivenessSessionStatus | undefined;
  Confidence?: number | undefined;
  ReferenceImage?: AuditImage | undefined;
  AuditImages?: AuditImage[] | undefined;
}
export declare class SessionNotFoundException extends __BaseException {
  readonly name: "SessionNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<SessionNotFoundException, __BaseException>
  );
}
export interface GetFaceSearchRequest {
  JobId: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  SortBy?: FaceSearchSortBy | undefined;
}
export interface PersonDetail {
  Index?: number | undefined;
  BoundingBox?: BoundingBox | undefined;
  Face?: FaceDetail | undefined;
}
export interface PersonMatch {
  Timestamp?: number | undefined;
  Person?: PersonDetail | undefined;
  FaceMatches?: FaceMatch[] | undefined;
}
export interface GetFaceSearchResponse {
  JobStatus?: VideoJobStatus | undefined;
  StatusMessage?: string | undefined;
  NextToken?: string | undefined;
  VideoMetadata?: VideoMetadata | undefined;
  Persons?: PersonMatch[] | undefined;
  JobId?: string | undefined;
  Video?: Video | undefined;
  JobTag?: string | undefined;
}
export declare const LabelDetectionAggregateBy: {
  readonly SEGMENTS: "SEGMENTS";
  readonly TIMESTAMPS: "TIMESTAMPS";
};
export type LabelDetectionAggregateBy =
  (typeof LabelDetectionAggregateBy)[keyof typeof LabelDetectionAggregateBy];
export declare const LabelDetectionSortBy: {
  readonly NAME: "NAME";
  readonly TIMESTAMP: "TIMESTAMP";
};
export type LabelDetectionSortBy =
  (typeof LabelDetectionSortBy)[keyof typeof LabelDetectionSortBy];
export interface GetLabelDetectionRequest {
  JobId: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  SortBy?: LabelDetectionSortBy | undefined;
  AggregateBy?: LabelDetectionAggregateBy | undefined;
}
export interface GetLabelDetectionRequestMetadata {
  SortBy?: LabelDetectionSortBy | undefined;
  AggregateBy?: LabelDetectionAggregateBy | undefined;
}
export interface LabelDetection {
  Timestamp?: number | undefined;
  Label?: Label | undefined;
  StartTimestampMillis?: number | undefined;
  EndTimestampMillis?: number | undefined;
  DurationMillis?: number | undefined;
}
export interface GetLabelDetectionResponse {
  JobStatus?: VideoJobStatus | undefined;
  StatusMessage?: string | undefined;
  VideoMetadata?: VideoMetadata | undefined;
  NextToken?: string | undefined;
  Labels?: LabelDetection[] | undefined;
  LabelModelVersion?: string | undefined;
  JobId?: string | undefined;
  Video?: Video | undefined;
  JobTag?: string | undefined;
  GetRequestMetadata?: GetLabelDetectionRequestMetadata | undefined;
}
export interface GetMediaAnalysisJobRequest {
  JobId: string | undefined;
}
export declare const MediaAnalysisJobFailureCode: {
  readonly ACCESS_DENIED: "ACCESS_DENIED";
  readonly INTERNAL_ERROR: "INTERNAL_ERROR";
  readonly INVALID_KMS_KEY: "INVALID_KMS_KEY";
  readonly INVALID_MANIFEST: "INVALID_MANIFEST";
  readonly INVALID_OUTPUT_CONFIG: "INVALID_OUTPUT_CONFIG";
  readonly INVALID_S3_OBJECT: "INVALID_S3_OBJECT";
  readonly RESOURCE_NOT_FOUND: "RESOURCE_NOT_FOUND";
  readonly RESOURCE_NOT_READY: "RESOURCE_NOT_READY";
  readonly THROTTLED: "THROTTLED";
};
export type MediaAnalysisJobFailureCode =
  (typeof MediaAnalysisJobFailureCode)[keyof typeof MediaAnalysisJobFailureCode];
export interface MediaAnalysisJobFailureDetails {
  Code?: MediaAnalysisJobFailureCode | undefined;
  Message?: string | undefined;
}
export interface MediaAnalysisInput {
  S3Object: S3Object | undefined;
}
export interface MediaAnalysisManifestSummary {
  S3Object?: S3Object | undefined;
}
export interface MediaAnalysisDetectModerationLabelsConfig {
  MinConfidence?: number | undefined;
  ProjectVersion?: string | undefined;
}
export interface MediaAnalysisOperationsConfig {
  DetectModerationLabels?:
    | MediaAnalysisDetectModerationLabelsConfig
    | undefined;
}
export interface MediaAnalysisOutputConfig {
  S3Bucket: string | undefined;
  S3KeyPrefix?: string | undefined;
}
export interface MediaAnalysisModelVersions {
  Moderation?: string | undefined;
}
export interface MediaAnalysisResults {
  S3Object?: S3Object | undefined;
  ModelVersions?: MediaAnalysisModelVersions | undefined;
}
export declare const MediaAnalysisJobStatus: {
  readonly CREATED: "CREATED";
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly QUEUED: "QUEUED";
  readonly SUCCEEDED: "SUCCEEDED";
};
export type MediaAnalysisJobStatus =
  (typeof MediaAnalysisJobStatus)[keyof typeof MediaAnalysisJobStatus];
export interface GetMediaAnalysisJobResponse {
  JobId: string | undefined;
  JobName?: string | undefined;
  OperationsConfig: MediaAnalysisOperationsConfig | undefined;
  Status: MediaAnalysisJobStatus | undefined;
  FailureDetails?: MediaAnalysisJobFailureDetails | undefined;
  CreationTimestamp: Date | undefined;
  CompletionTimestamp?: Date | undefined;
  Input: MediaAnalysisInput | undefined;
  OutputConfig: MediaAnalysisOutputConfig | undefined;
  KmsKeyId?: string | undefined;
  Results?: MediaAnalysisResults | undefined;
  ManifestSummary?: MediaAnalysisManifestSummary | undefined;
}
export declare const PersonTrackingSortBy: {
  readonly INDEX: "INDEX";
  readonly TIMESTAMP: "TIMESTAMP";
};
export type PersonTrackingSortBy =
  (typeof PersonTrackingSortBy)[keyof typeof PersonTrackingSortBy];
export interface GetPersonTrackingRequest {
  JobId: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
  SortBy?: PersonTrackingSortBy | undefined;
}
export interface PersonDetection {
  Timestamp?: number | undefined;
  Person?: PersonDetail | undefined;
}
export interface GetPersonTrackingResponse {
  JobStatus?: VideoJobStatus | undefined;
  StatusMessage?: string | undefined;
  VideoMetadata?: VideoMetadata | undefined;
  NextToken?: string | undefined;
  Persons?: PersonDetection[] | undefined;
  JobId?: string | undefined;
  Video?: Video | undefined;
  JobTag?: string | undefined;
}
export interface GetSegmentDetectionRequest {
  JobId: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface ShotSegment {
  Index?: number | undefined;
  Confidence?: number | undefined;
}
export declare const TechnicalCueType: {
  readonly BLACK_FRAMES: "BlackFrames";
  readonly COLOR_BARS: "ColorBars";
  readonly CONTENT: "Content";
  readonly END_CREDITS: "EndCredits";
  readonly OPENING_CREDITS: "OpeningCredits";
  readonly SLATE: "Slate";
  readonly STUDIO_LOGO: "StudioLogo";
};
export type TechnicalCueType =
  (typeof TechnicalCueType)[keyof typeof TechnicalCueType];
export interface TechnicalCueSegment {
  Type?: TechnicalCueType | undefined;
  Confidence?: number | undefined;
}
export declare const SegmentType: {
  readonly SHOT: "SHOT";
  readonly TECHNICAL_CUE: "TECHNICAL_CUE";
};
export type SegmentType = (typeof SegmentType)[keyof typeof SegmentType];
export interface SegmentDetection {
  Type?: SegmentType | undefined;
  StartTimestampMillis?: number | undefined;
  EndTimestampMillis?: number | undefined;
  DurationMillis?: number | undefined;
  StartTimecodeSMPTE?: string | undefined;
  EndTimecodeSMPTE?: string | undefined;
  DurationSMPTE?: string | undefined;
  TechnicalCueSegment?: TechnicalCueSegment | undefined;
  ShotSegment?: ShotSegment | undefined;
  StartFrameNumber?: number | undefined;
  EndFrameNumber?: number | undefined;
  DurationFrames?: number | undefined;
}
export interface SegmentTypeInfo {
  Type?: SegmentType | undefined;
  ModelVersion?: string | undefined;
}
export interface GetSegmentDetectionResponse {
  JobStatus?: VideoJobStatus | undefined;
  StatusMessage?: string | undefined;
  VideoMetadata?: VideoMetadata[] | undefined;
  AudioMetadata?: AudioMetadata[] | undefined;
  NextToken?: string | undefined;
  Segments?: SegmentDetection[] | undefined;
  SelectedSegmentTypes?: SegmentTypeInfo[] | undefined;
  JobId?: string | undefined;
  Video?: Video | undefined;
  JobTag?: string | undefined;
}
export interface GetTextDetectionRequest {
  JobId: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface TextDetectionResult {
  Timestamp?: number | undefined;
  TextDetection?: TextDetection | undefined;
}
export interface GetTextDetectionResponse {
  JobStatus?: VideoJobStatus | undefined;
  StatusMessage?: string | undefined;
  VideoMetadata?: VideoMetadata | undefined;
  TextDetections?: TextDetectionResult[] | undefined;
  NextToken?: string | undefined;
  TextModelVersion?: string | undefined;
  JobId?: string | undefined;
  Video?: Video | undefined;
  JobTag?: string | undefined;
}
export interface IndexFacesRequest {
  CollectionId: string | undefined;
  Image: Image | undefined;
  ExternalImageId?: string | undefined;
  DetectionAttributes?: Attribute[] | undefined;
  MaxFaces?: number | undefined;
  QualityFilter?: QualityFilter | undefined;
}
export declare const Reason: {
  readonly EXCEEDS_MAX_FACES: "EXCEEDS_MAX_FACES";
  readonly EXTREME_POSE: "EXTREME_POSE";
  readonly LOW_BRIGHTNESS: "LOW_BRIGHTNESS";
  readonly LOW_CONFIDENCE: "LOW_CONFIDENCE";
  readonly LOW_FACE_QUALITY: "LOW_FACE_QUALITY";
  readonly LOW_SHARPNESS: "LOW_SHARPNESS";
  readonly SMALL_BOUNDING_BOX: "SMALL_BOUNDING_BOX";
};
export type Reason = (typeof Reason)[keyof typeof Reason];
export interface UnindexedFace {
  Reasons?: Reason[] | undefined;
  FaceDetail?: FaceDetail | undefined;
}
export interface IndexFacesResponse {
  FaceRecords?: FaceRecord[] | undefined;
  OrientationCorrection?: OrientationCorrection | undefined;
  FaceModelVersion?: string | undefined;
  UnindexedFaces?: UnindexedFace[] | undefined;
}
export declare class InvalidManifestException extends __BaseException {
  readonly name: "InvalidManifestException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidManifestException, __BaseException>
  );
}
export interface KinesisVideoStreamStartSelector {
  ProducerTimestamp?: number | undefined;
  FragmentNumber?: string | undefined;
}
export declare const LabelDetectionFeatureName: {
  readonly GENERAL_LABELS: "GENERAL_LABELS";
};
export type LabelDetectionFeatureName =
  (typeof LabelDetectionFeatureName)[keyof typeof LabelDetectionFeatureName];
export interface LabelDetectionSettings {
  GeneralLabels?: GeneralLabelsSettings | undefined;
}
export interface ListCollectionsRequest {
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ListCollectionsResponse {
  CollectionIds?: string[] | undefined;
  NextToken?: string | undefined;
  FaceModelVersions?: string[] | undefined;
}
export interface ListDatasetEntriesRequest {
  DatasetArn: string | undefined;
  ContainsLabels?: string[] | undefined;
  Labeled?: boolean | undefined;
  SourceRefContains?: string | undefined;
  HasErrors?: boolean | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ListDatasetEntriesResponse {
  DatasetEntries?: string[] | undefined;
  NextToken?: string | undefined;
}
export interface ListDatasetLabelsRequest {
  DatasetArn: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ListDatasetLabelsResponse {
  DatasetLabelDescriptions?: DatasetLabelDescription[] | undefined;
  NextToken?: string | undefined;
}
export interface ListFacesRequest {
  CollectionId: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
  UserId?: string | undefined;
  FaceIds?: string[] | undefined;
}
export interface ListFacesResponse {
  Faces?: Face[] | undefined;
  NextToken?: string | undefined;
  FaceModelVersion?: string | undefined;
}
export interface ListMediaAnalysisJobsRequest {
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface MediaAnalysisJobDescription {
  JobId: string | undefined;
  JobName?: string | undefined;
  OperationsConfig: MediaAnalysisOperationsConfig | undefined;
  Status: MediaAnalysisJobStatus | undefined;
  FailureDetails?: MediaAnalysisJobFailureDetails | undefined;
  CreationTimestamp: Date | undefined;
  CompletionTimestamp?: Date | undefined;
  Input: MediaAnalysisInput | undefined;
  OutputConfig: MediaAnalysisOutputConfig | undefined;
  KmsKeyId?: string | undefined;
  Results?: MediaAnalysisResults | undefined;
  ManifestSummary?: MediaAnalysisManifestSummary | undefined;
}
export interface ListMediaAnalysisJobsResponse {
  NextToken?: string | undefined;
  MediaAnalysisJobs: MediaAnalysisJobDescription[] | undefined;
}
export interface ListProjectPoliciesRequest {
  ProjectArn: string | undefined;
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface ProjectPolicy {
  ProjectArn?: string | undefined;
  PolicyName?: string | undefined;
  PolicyRevisionId?: string | undefined;
  PolicyDocument?: string | undefined;
  CreationTimestamp?: Date | undefined;
  LastUpdatedTimestamp?: Date | undefined;
}
export interface ListProjectPoliciesResponse {
  ProjectPolicies?: ProjectPolicy[] | undefined;
  NextToken?: string | undefined;
}
export interface ListStreamProcessorsRequest {
  NextToken?: string | undefined;
  MaxResults?: number | undefined;
}
export interface StreamProcessor {
  Name?: string | undefined;
  Status?: StreamProcessorStatus | undefined;
}
export interface ListStreamProcessorsResponse {
  NextToken?: string | undefined;
  StreamProcessors?: StreamProcessor[] | undefined;
}
export interface ListTagsForResourceRequest {
  ResourceArn: string | undefined;
}
export interface ListTagsForResourceResponse {
  Tags?: Record<string, string> | undefined;
}
export interface ListUsersRequest {
  CollectionId: string | undefined;
  MaxResults?: number | undefined;
  NextToken?: string | undefined;
}
export interface User {
  UserId?: string | undefined;
  UserStatus?: UserStatus | undefined;
}
export interface ListUsersResponse {
  Users?: User[] | undefined;
  NextToken?: string | undefined;
}
export declare class MalformedPolicyDocumentException extends __BaseException {
  readonly name: "MalformedPolicyDocumentException";
  readonly $fault: "client";
  Message?: string | undefined;
  Code?: string | undefined;
  Logref?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      MalformedPolicyDocumentException,
      __BaseException
    >
  );
}
export declare const AuditImageFilterSensitiveLog: (obj: AuditImage) => any;
export declare const GetFaceLivenessSessionResultsResponseFilterSensitiveLog: (
  obj: GetFaceLivenessSessionResultsResponse
) => any;
